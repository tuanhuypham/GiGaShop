@model Gigashop.Models.RegisterViewModel

@{
    ViewData["Title"] = "Register";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="signup-container">
    <div class="signup-box">
        <h2>Đăng Ký</h2>

        @using (Html.BeginForm("Register", "Auth", FormMethod.Post, new { id = "signupForm" }))
        {
            <div class="textbox">
                @Html.TextBoxFor(m => m.Username, new { placeholder = "Tên đăng nhập", @class = "form-control", required = "required" })
                @Html.ValidationMessageFor(m => m.Username, "", new { @class = "text-danger" })
            </div>

            <div class="textbox">
                @Html.PasswordFor(m => m.Password, new { placeholder = "Mật khẩu", @id = "password", @class = "form-control", required = "required" })
                <span class="show-password" onclick="togglePassword()">👁️</span>
                @Html.ValidationMessageFor(m => m.Password, "", new { @class = "text-danger" })
            </div>

            <div class="textbox">
                <input type="password" id="confirmPassword" placeholder="Nhập lại mật khẩu" class="form-control" required />
                <span class="show-password" onclick="toggleConfirmPassword()">👁️</span>
                <span id="confirmPasswordError" class="text-danger"></span>
            </div>

            <div class="textbox">
                @Html.TextBoxFor(m => m.FullName, new { placeholder = "Họ và Tên", @class = "form-control", required = "required" })
                @Html.ValidationMessageFor(m => m.FullName, "", new { @class = "text-danger" })
            </div>

            <div class="textbox">
                @Html.TextBoxFor(m => m.Email, new { placeholder = "Email", @class = "form-control", required = "required", type = "email" })
                @Html.ValidationMessageFor(m => m.Email, "", new { @class = "text-danger" })
            </div>

            <div class="textbox">
                @Html.TextBoxFor(m => m.Phone, new { placeholder = "Số điện thoại", @class = "form-control", required = "required" })
                @Html.ValidationMessageFor(m => m.Phone, "", new { @class = "text-danger" })
            </div>

            <div class="textbox">
                @Html.TextBoxFor(m => m.Address, new { placeholder = "Địa chỉ", @class = "form-control", required = "required" })
                @Html.ValidationMessageFor(m => m.Address, "", new { @class = "text-danger" })
            </div>

            <button type="submit" class="btn">Đăng Ký</button>

            <div class="login-redirect">
                <p>Đã có tài khoản? <a href="@Url.Action("Login", "Auth")">Đăng nhập ngay</a></p>
            </div>
        }
    </div>
</div>
<style>


    .signup-box {
        background-color: white;
        padding: 40px;
        
        border-radius: 8px;
        width: 450px;
        text-align: center;
        margin: auto;
    }

    h2 {
        color: #1e3a8a;
        margin-bottom: 20px;
    }

    .textbox {
        margin-bottom: 20px;
        position: relative;
    }

        .textbox input {
            width: 100%;
            padding: 10px;
            border: 1px solid #ddd;
            border-radius: 4px;
            font-size: 16px;
        }

    .show-password {
        position: absolute;
        top: 50%;
        right: 10px;
        transform: translateY(-50%);
        cursor: pointer;
        font-size: 18px;
    }

    .btn {
        background-color: #1e3a8a;
        color: white;
        border: none;
        padding: 10px 20px;
        border-radius: 4px;
        width: 100%;
        cursor: pointer;
        font-size: 16px;
    }

        .btn:hover {
            background-color: #2b4692;
        }

    .login-redirect {
        margin-top: 10px;
    }

        .login-redirect p {
            font-size: 14px;
        }

        .login-redirect a {
            text-decoration: none;
            color: #1e3a8a;
        }

        .login-redirect a:hover {
            text-decoration: underline;
        }
</style>
@section Scripts {
    <script>
        function togglePassword() {
            var passwordField = document.getElementById("password");
            passwordField.type = passwordField.type === "password" ? "text" : "password";
        }

        function toggleConfirmPassword() {
            var confirmPasswordField = document.getElementById("confirmPassword");
            confirmPasswordField.type = confirmPasswordField.type === "password" ? "text" : "password";
        }

        document.getElementById("signupForm").addEventListener("submit", function (event) {
            var password = document.getElementById("password").value;
            var confirmPassword = document.getElementById("confirmPassword").value;

            // Kiểm tra mật khẩu và nhập lại mật khẩu có khớp hay không
            if (password !== confirmPassword) {
                event.preventDefault();
                document.getElementById("confirmPasswordError").textContent = "Mật khẩu không khớp.";
            } else {
                document.getElementById("confirmPasswordError").textContent = "";
            }
        });
    </script>
}